import { Networks } from "./blockchain";

const AVAX_MAINNET = {
    DAO_ADDRESS: "0xAe6c2FC6a577f80cBb712248a329dFaB1150C888",
    SVERSE_ADDRESS: "0x91AA967844474eFEBA152C6D238d2046443BB691",
    VERSE_ADDRESS: "0xae9f98865fD356a4709cE4fc9FB384AD5a323b1E",
    MIM_ADDRESS: "0xd586e7f844cea2f87f50152665bcbc2c279d8d70",
    STAKING_ADDRESS: "0x3c74477D0a7A6728836C67B4f06024c94f236Cfa",
    STAKING_HELPER_ADDRESS: "0x852F44bEeeFf4f8885Bc0FE9356eF47EE81c878E",
    VERSE_BONDING_CALC_ADDRESS: "0x970fA579FA01E56B6FCE4E8A91Bf81DD84b3B559",
    TREASURY_ADDRESS: "0x37E89120Af582804d07F050807Ab77177ecE3ca6",
    ZAPIN_ADDRESS: "0x9ABE63C5A2fBcd54c8bAec3553d326356a530cae", //"0xb98007C04f475022bE681a890512518052CE6104",
    WSVERSE_ADDRESS: "0xE6420ee02D2B61Bd8556E5F8a5197983ce51e1f1",
};

export const getAddresses = (networkID: number) => {
    if (networkID === Networks.AVAX) return AVAX_MAINNET;

    throw Error("Network don't support");
};
